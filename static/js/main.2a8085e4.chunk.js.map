{"version":3,"sources":["components/Users/users.module.css","App.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Nav/Nav.module.css","reportWebVitals.ts","components/Nav/Nav.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogsItem.tsx","redux/dialogs-reducer.tsx","components/Dialogs/Message/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","images/user.png","components/Users/users.tsx","api/api.ts","redux/users-reducer.ts","images/loader.svg","components/Common/preloader.tsx","components/Users/usersContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","redux/profile-reducer.tsx","components/Profile/MyPosts/Post/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","images/logo.png","components/Header/Header.tsx","redux/auth-reducer.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","redux/redux-store.ts","index.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Nav","className","s","nav","item","to","isActive","active","News","Music","Settings","MessageItem","props","message","DialogItem","path","id","name","initialState","messages","dialogs","newMessageText","DialogsContainer","connect","state","messagesPage","isAuth","auth","dispatch","addMessage","type","onChangeHandler","text","newMessage","dialogsElement","map","d","messagesElement","m","navigate","useNavigate","useEffect","user","placeholder","value","onChange","e","currentTarget","onClick","Users","pagesCount","Math","ceil","totalUsersCount","pageSize","allPages","showPages","i","push","p","onPageChanged","currentPage","selectPage","disabled","users","u","body","logo","src","photos","small","userPhoto","alt","photo","followed","followingInProgress","some","unFollowThunk","followThunk","content","instance","axios","create","withCredentials","baseURL","headers","userAPI","get","response","data","authAPI","followAPI","userID","delete","post","profileAPI","userId","isFetching","toggleIsFetchingAC","status","toggleIsFollowingAC","Preloader","loader","UsersAPIComponent","pageNumber","setCurrentPage","getUsers","this","React","Component","UsersContainer","usersPage","toggleIsFollowing","setUsersAC","items","totalCount","resultCode","ProfileStatus","useState","editMode","setState","onBlur","autoFocus","onDoubleClick","ProfileInfo","profile","large","info","title","fullName","aboutMe","lookingForAJobDescription","contacts","facebook","twitter","vk","github","Post","likescount","posts","newPostText","MyPostsContainer","profilePage","updateNewPostText","newText","addPost","postsElemnt","pospt","Profile","ProfileContainer","useSelector","useDispatch","useParams","setUserThunk","Header","header","loginBlock","login","email","HeaderContainer","setUserDataAC","setAuthUserDataThunk","Login","App","appWrapper","appWrapperBody","appWrapperContent","element","rootReduser","combineReducers","action","newPost","stateCopy","filter","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a8085e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"users_photo__1939q\",\"body\":\"users_body__1BkUf\",\"logo\":\"users_logo__3h-J1\",\"content\":\"users_content__2sBhk\",\"selectPage\":\"users_selectPage__u6k5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__-H9Bl\",\"appWrapperBody\":\"App_appWrapperBody__17-NL\",\"appWrapperContent\":\"App_appWrapperContent__28hHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1UP72\",\"user\":\"Dialogs_user__2VYq4\",\"message\":\"Dialogs_message__m7sKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Ga8t\",\"loginBlock\":\"Header_loginBlock__1_uRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__v3zZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__tNvQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pospt\":\"MyPosts_pospt__pjcEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3BN7b\",\"item\":\"Nav_item__24uj9\",\"active\":\"Nav_active__rsa6L\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport s from './Nav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Nav = () => {\r\n\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}><NavLink to='/profile' className={({isActive}) => isActive ? s.active : ''}>Profile</NavLink></div>\r\n      <div className={s.item}><NavLink to='/dialogs' className={({isActive}) => isActive ? s.active : ''}>Messages</NavLink></div>\r\n      <div className={s.item}><NavLink to='/news' className={({isActive}) => isActive ? s.active : ''}>News</NavLink></div>\r\n      <div className={s.item}><NavLink to='/music' className={({isActive}) => isActive ? s.active : ''}>Music</NavLink></div>\r\n      <div className={s.item}><NavLink to='/users' className={({isActive}) => isActive ? s.active : ''}> Users</NavLink></div>\r\n      <div className={s.item}><NavLink to='/settings' className={({isActive}) => isActive ? s.active : ''}> Settings</NavLink></div>\r\n    </nav>\r\n  )\r\n}","import React from \"react\";\r\nimport s from './News.module.css'\r\n\r\nexport const News = () => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport s from './Music.module.css'\r\n\r\nexport const Music = () => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport s from './Settings.module.css'\r\n\r\nexport const Settings = () => {\r\n  return (\r\n    <div>\r\n      Settings.\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\n\r\ntype MessageItemPorpsType = {\r\n  message: string\r\n}\r\n\r\nexport const MessageItem = (props: MessageItemPorpsType) => {\r\n  return (\r\n    <div>{props.message}</div>\r\n  )\r\n}","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\ntype DialogItemPropsType = {\r\n  id: number\r\n  name: string\r\n}\r\n\r\nexport const DialogItem = (props: DialogItemPropsType) => {\r\n  let path = '/dialogs/' + props.id\r\n  return (\r\n    <div><NavLink to={path}>{props.name}</NavLink></div>\r\n  )\r\n}","export type InitialStatePropsType = typeof initialState\r\nexport type DialogsPropsType = {\r\n  id: number\r\n  name: string\r\n}\r\nexport type MessagesPropsType = {\r\n  id: number\r\n  message: string\r\n}\r\ntype ActionsType = AddMessageACProsType | UpdateNewMessageTextACProsType\r\ntype AddMessageACProsType = {\r\n  type: 'ADD-MESSAGE'\r\n}\r\ntype UpdateNewMessageTextACProsType = {\r\n  type: 'UPDATE-NEW-MESSAGE-TEXT'\r\n  newMessage: string\r\n}\r\n\r\nlet initialState = {\r\n  messages: [\r\n    {id: 1, message: 'Hello'},\r\n    {id: 2, message: 'How are you?'},\r\n    {id: 3, message: ':)'},\r\n  ] as Array<MessagesPropsType>,\r\n  dialogs: [\r\n    {id: 1, name: 'Ed'},\r\n    {id: 2, name: 'Viktoria'},\r\n    {id: 3, name: 'Ned'},\r\n    {id: 4, name: 'Varova'}\r\n  ] as Array<DialogsPropsType>,\r\n  newMessageText: ''\r\n}\r\n\r\nexport const dialogsReducer = (state: InitialStatePropsType = initialState, action: ActionsType): InitialStatePropsType => {\r\n  switch (action.type) {\r\n    case 'ADD-MESSAGE': {\r\n      let newMessage: MessagesPropsType = {\r\n        id: 4,\r\n        message: state.newMessageText\r\n      }\r\n      let stateCopy = {...state}\r\n      stateCopy.messages = [...state.messages]\r\n      stateCopy.messages.push(newMessage)\r\n      stateCopy.newMessageText = ''\r\n      return stateCopy\r\n    }\r\n    case 'UPDATE-NEW-MESSAGE-TEXT': {\r\n      let stateCopy = {...state}\r\n      stateCopy.newMessageText = action.newMessage\r\n      return stateCopy\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const AddMessageAC = () => ({type: 'ADD-MESSAGE'} as const)\r\nexport const UpdateNewMessageTextAC = (newMessage: string) => ({\r\n  type: 'UPDATE-NEW-MESSAGE-TEXT',\r\n  newMessage: newMessage\r\n} as const)","import {Dialogs} from \"../Dialogs\";\r\nimport {AddMessageAC, InitialStatePropsType, UpdateNewMessageTextAC} from \"../../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStatetype} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n  messagesPage: InitialStatePropsType\r\n  isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n  addMessage: () => void\r\n  onChangeHandler: (text: string) => void\r\n}\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: AppStatetype): MapStateToPropsType => {\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n  return {\r\n    addMessage: () => {\r\n      dispatch(AddMessageAC())\r\n    },\r\n    onChangeHandler: (text: string) => {\r\n      dispatch(UpdateNewMessageTextAC(text))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)","import React, {ChangeEvent, useEffect} from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {MessageItem} from \"./Message/Message\";\r\nimport {DialogItem} from \"./DialogItem/DialogsItem\";\r\nimport {DialogsPropsType} from \"./Message/DialogsContainer\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nexport const Dialogs = (props: DialogsPropsType) => {\r\n  const dialogsElement = props.messagesPage.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n  const messagesElement = props.messagesPage.messages.map(m => <MessageItem message={m.message}/>)\r\n\r\n  const onAddMessage = () => {\r\n    props.addMessage()\r\n  }\r\n\r\n  const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    props.onChangeHandler(e.currentTarget.value)\r\n  }\r\n\r\n  let navigate = useNavigate()\r\n  useEffect(() => {\r\n    if(!props.isAuth){\r\n      return navigate('/login')\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.user}>\r\n        {dialogsElement}\r\n      </div>\r\n      <div className={s.message}>\r\n        {messagesElement}\r\n        <textarea placeholder={'Enter your message...'} value={props.messagesPage.newMessageText}\r\n                  onChange={onChangeHandler}/>\r\n        <button onClick={onAddMessage}>Add message</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/user.d393fa70.png\";","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../images/user.png\";\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  onPageChanged: (p: number) => void\r\n  users: Array<UsersType>\r\n  followingInProgress: number[]\r\n  followThunk: (userId: number) => void\r\n  unFollowThunk: (userId: number) => void\r\n}\r\n\r\nconst Users = (props: PropsType) => {\r\n\r\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n  let allPages: Array<number> = []\r\n  let showPages: Array<number> = []\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    allPages.push(i)\r\n  }\r\n  for (let i = 1; i <= 10; i++) {\r\n    showPages.push(i)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showPages.map(p => <button onClick={() => props.onPageChanged(p)}\r\n                                  className={props.currentPage === p ? s.selectPage : ''}\r\n                                  disabled={props.currentPage === p}\r\n      >{p}</button>)}\r\n      {props.users.map(u => <div key={u.id} className={s.body}>\r\n        <div className={s.logo}>\r\n          <div>\r\n            <NavLink to={'/profile/' + u.id}>\r\n              <img src={u.photos.small !== null ? u.photos.small : userPhoto} alt=\"ava\" className={s.photo}/>\r\n            </NavLink>\r\n          </div>\r\n          <div>\r\n            {u.followed\r\n              ? <button disabled={props.followingInProgress.some(id => id ===u.id)} onClick={() => {\r\n                props.unFollowThunk(u.id)\r\n              }}>Unfollow</button>\r\n              : <button disabled={props.followingInProgress.some(id => id ===u.id)} onClick={() => {\r\n                props.followThunk(u.id)\r\n              }}>Follow</button>}\r\n          </div>\r\n        </div>\r\n        <div className={s.content}>\r\n          <div>Name: {u.name}</div>\r\n        </div>\r\n      </div>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {'API-KEY': 'ba634933-a40a-488e-bf8b-9720d0155fba'}\r\n})\r\n\r\nexport const userAPI = {\r\n  getUsers(currentPage: number, pageSize: number) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => response.data)\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  getAuth(){\r\n    return instance.get('auth/me').then(response => response.data)\r\n  }\r\n}\r\n\r\nexport const followAPI = {\r\n  setUnfollow(userID: number){\r\n    return instance.delete(`follow/${userID}`).then(response => response.data)\r\n  },\r\n  setFollow(userID: number){\r\n    return instance.post(`follow/${userID}`).then(response => response.data)\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId: string | undefined){\r\n    return instance.get(`profile/${userId}`)\r\n  }\r\n}","import {followAPI, userAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type InitialStatePropsType = typeof initialState\r\nexport type UsersType = {\r\n  name: string\r\n  id: number\r\n  photos: {\r\n    small: null\r\n    large: null\r\n  },\r\n  status: null,\r\n  followed: boolean\r\n}\r\ntype ActionsType =\r\n  FollowACType\r\n  | UnFollowACType\r\n  | SetUsersACType\r\n  | SetCurrentPageAVType\r\n  | SetTotalCountACType\r\n  | ToggleIsFetchingACType\r\n  | SetFirstPageACType\r\n  | ToggleIsFollowingACType\r\ntype FollowACType = {\r\n  type: 'FOLLOW'\r\n  userID: number\r\n}\r\ntype UnFollowACType = {\r\n  type: 'UNFOLLOW'\r\n  userID: number\r\n}\r\ntype SetUsersACType = {\r\n  type: 'SET-USERS'\r\n  users: any\r\n}\r\ntype SetCurrentPageAVType = {\r\n  type: 'SET-CURRENT-PAGE',\r\n  currentPage: number\r\n}\r\ntype SetTotalCountACType = {\r\n  type: 'SET-TOTAL-COUNT'\r\n  totalUsersCount: number\r\n}\r\ntype ToggleIsFetchingACType = {\r\n  type: 'TOGGLE-IS-FETCHING'\r\n  status: boolean\r\n}\r\ntype SetFirstPageACType = {\r\n  type: 'SET-SHOW-VALUE'\r\n  fistPage: number\r\n  lastPage: number\r\n}\r\ntype ToggleIsFollowingACType = {\r\n  type: 'TOGGLE-IS-FOLLOWING'\r\n  isFetching: boolean\r\n  userId: number\r\n}\r\n\r\nlet initialState = {\r\n  users: [] as Array<UsersType>,\r\n  pageSize: 6,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as number[]\r\n}\r\n\r\nexport const usersReducer = (state: InitialStatePropsType = initialState, action: ActionsType): InitialStatePropsType => {\r\n  switch (action.type) {\r\n    case 'FOLLOW':\r\n      return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: true} : m)}\r\n    case 'UNFOLLOW':\r\n      return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: false} : m)}\r\n    case 'SET-USERS':\r\n      return {...state, users: action.users}\r\n    case 'SET-CURRENT-PAGE': {\r\n      return {...state, currentPage: action.currentPage}\r\n    }\r\n    case 'SET-TOTAL-COUNT' : {\r\n      return {...state, totalUsersCount: action.totalUsersCount}\r\n    }\r\n    case 'TOGGLE-IS-FETCHING' : {\r\n      return {...state, isFetching: action.status}\r\n    }\r\n    case 'TOGGLE-IS-FOLLOWING': {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const followAC = (userID: number) => ({type: 'FOLLOW', userID})\r\nexport const unFollowAC = (userID: number) => ({type: 'UNFOLLOW', userID})\r\nexport const setUsersAC = (users: Array<UsersType>) => ({type: 'SET-USERS', users})\r\nexport const setCurrentPageAC = (currentPage: number) => ({type: 'SET-CURRENT-PAGE', currentPage})\r\nexport const setTotalCountAC = (totalUsersCount: number) => ({type: 'SET-TOTAL-COUNT', totalUsersCount})\r\nexport const toggleIsFetchingAC = (status: boolean) => ({type: 'TOGGLE-IS-FETCHING', status})\r\nexport const toggleIsFollowingAC = (isFetching: boolean, userId: number) => ({\r\n  type: 'TOGGLE-IS-FOLLOWING',\r\n  isFetching,\r\n  userId\r\n})\r\n\r\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true))\r\n    userAPI.getUsers(currentPage, pageSize).then(data => {\r\n      dispatch(toggleIsFetchingAC(false))\r\n      dispatch(setUsersAC(data.items))\r\n      dispatch(setTotalCountAC(data.totalCount))\r\n    })\r\n  }\r\n}\r\nexport const followThunkCreator = (userId: number) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFollowingAC(true, userId))\r\n    followAPI.setFollow(userId).then(data => {\r\n      if (data.resultCode === 0) {\r\n        dispatch(followAC(userId))\r\n      }\r\n      dispatch(toggleIsFollowingAC(false, userId))\r\n    })\r\n  }\r\n}\r\nexport const unFollowThunkCreator = (userId: number) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFollowingAC(true, userId))\r\n    followAPI.setUnfollow(userId).then(data => {\r\n      if (data.resultCode === 0) {\r\n        dispatch(unFollowAC(userId))\r\n      }\r\n      dispatch(toggleIsFollowingAC(false, userId))\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/loader.0ecd8fea.svg\";","import React from 'react';\r\nimport loader from \"../../images/loader.svg\";\r\n\r\nexport const Preloader = () => {\r\n  return (\r\n    <div>\r\n      <img src={loader} alt='loader'/>\r\n    </div>\r\n  );\r\n};","import {connect} from \"react-redux\";\r\nimport {AppStatetype} from \"../../redux/redux-store\";\r\nimport React from \"react\";\r\nimport Users from \"./users\";\r\nimport {\r\n  followThunkCreator,\r\n  getUsersThunkCreator,\r\n  setCurrentPageAC,\r\n  toggleIsFollowingAC,\r\n  unFollowThunkCreator,\r\n  UsersType\r\n} from \"../../redux/users-reducer\";\r\nimport {Preloader} from \"../Common/preloader\";\r\n\r\nexport type UserspropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype MapStateToPropsType = {\r\n  users: Array<UsersType>\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgress: number[]\r\n}\r\ntype MapDispatchToPropsType = {\r\n  setCurrentPage: (currentPage: number) => void\r\n  toggleIsFollowing: (isFetching: boolean, userId: number) => void\r\n  getUsers: (currentPage: number, pageSize: number) => void\r\n  followThunk: (userId: number) => void\r\n  unFollowThunk: (userId: number) => void\r\n}\r\n\r\nexport class UsersAPIComponent extends React.Component<UserspropsType> {\r\n\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    this.props.setCurrentPage(pageNumber)\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      {this.props.isFetching ?\r\n        <Preloader/> :\r\n        <Users totalUsersCount={this.props.totalUsersCount}\r\n               pageSize={this.props.pageSize}\r\n               currentPage={this.props.currentPage}\r\n               onPageChanged={this.onPageChanged}\r\n               users={this.props.users}\r\n               followingInProgress={this.props.followingInProgress}\r\n               followThunk={this.props.followThunk}\r\n               unFollowThunk={this.props.unFollowThunk}\r\n        />}\r\n\r\n    </>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStatetype): MapStateToPropsType => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching,\r\n    followingInProgress: state.usersPage.followingInProgress\r\n  }\r\n}\r\n\r\nexport const UsersContainer = connect(mapStateToProps, {\r\n  setCurrentPage: setCurrentPageAC,\r\n  toggleIsFollowing: toggleIsFollowingAC,\r\n  getUsers: getUsersThunkCreator,\r\n  followThunk: followThunkCreator,\r\n  unFollowThunk: unFollowThunkCreator\r\n})(UsersAPIComponent)","import React, {useState} from 'react';\r\n\r\nconst ProfileStatus = (props: any) => {\r\n  const [state, setState] = useState({editMode: false})\r\n\r\n  const onClickHandler = () => {\r\n    setState({editMode: true})\r\n  }\r\n  const onBlurHandler = () => {\r\n    setState({editMode: false})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!state.editMode\r\n        ? <div>\r\n          <span onDoubleClick={onClickHandler}>{props.status}</span>\r\n        </div>\r\n        :\r\n        <div>\r\n          <input value={props.status} onBlur={onBlurHandler} autoFocus={true}/>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport {Preloader} from \"../../Common/preloader\";\r\nimport {ProfileType} from \"../ProfileContainer\";\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\ntype ProfileInfoPropsType = {\r\n  profile: ProfileType\r\n}\r\n\r\nexport const ProfileInfo = (props: ProfileInfoPropsType) => {\r\n  if (!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n  return (\r\n    <div>\r\n      {/*<img src={'https://ic.pics.livejournal.com/stepbystep_hdr/11824494/1199598/1199598_original.jpg'}*/}\r\n      {/*     alt={'main logo'}/>*/}\r\n      <div className={s.body}>\r\n        <div className={s.photo}>\r\n          <img src={props.profile.photos.large} alt={'img'}/>\r\n        </div>\r\n\r\n        <div className={s.info}>\r\n          <span><span className={s.title}>Name : </span> {props.profile.fullName}</span>\r\n          <span><span className={s.title}> About me : </span> {props.profile.aboutMe}</span>\r\n          <span><span className={s.title}> Looking for a job : </span> {props.profile.lookingForAJobDescription}</span>\r\n          <span><span className={s.title}> My contacts :</span>\r\n            <div className={s.contacts}>\r\n              <li> Facebook: {props.profile.contacts.facebook}</li>\r\n              <li> Twitter: {props.profile.contacts.twitter}</li>\r\n              <li> VK: {props.profile.contacts.vk}</li>\r\n              <li> Github: {props.profile.contacts.github}</li>\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <ProfileStatus status={'Hello'}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\ntype postPropsType = {\r\n  message: string\r\n  likescount: number\r\n}\r\n\r\nexport const Post = (props:postPropsType) => {\r\n  return (\r\n    <div>\r\n      <div className={s.item}><img\r\n        src={'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTvWNvxqwJyqQtJQLKuWSGDQaxDG0JQ1LHbV_ffZ1qdFc85UtnfLu1D2IbsKPdIqnUtyE8&usqp=CAU'}\r\n        alt={'ava'}/>\r\n        {props.message}\r\n        <div>\r\n          <button>Like</button> {props.likescount}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import {ProfileType} from \"../components/Profile/ProfileContainer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nexport type InitialStatePropsType = typeof initialState\r\nexport type postPropsType = {\r\n  id: number\r\n  message: string\r\n  likescount: number\r\n}\r\ntype ActionsType = AddPostACType | UpdateNewPostTextACType | SetUserProfileACType\r\ntype AddPostACType = {\r\n  type: \"ADD-POST\"\r\n}\r\ntype UpdateNewPostTextACType = {\r\n  type: 'UPDATE-NEW-POST-TEXT'\r\n  newText: string\r\n}\r\ntype SetUserProfileACType = {\r\n  type: 'SET-USER-PROFILE'\r\n  profile: ProfileType\r\n}\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, message: 'Hi, how are you??', likescount: 3},\r\n    {id: 2, message: 'It\\'s my first post', likescount: 15}\r\n  ] as Array<postPropsType>,\r\n  newPostText: '',\r\n  profile: null\r\n}\r\n\r\nexport const profileReducer = (state: InitialStatePropsType = initialState, action: ActionsType): InitialStatePropsType => {\r\n  switch (action.type) {\r\n    case 'ADD-POST': {\r\n      let newPost: postPropsType = {\r\n        id: 5,\r\n        message: state.newPostText,\r\n        likescount: 0\r\n      }\r\n      let stateCopy = {...state}\r\n      stateCopy.posts = [...state.posts]\r\n      stateCopy.posts.push(newPost)\r\n      stateCopy.newPostText = ''\r\n      return stateCopy\r\n    }\r\n    case 'UPDATE-NEW-POST-TEXT': {\r\n      let stateCopy = {...state}\r\n      stateCopy.newPostText = action.newText\r\n      return stateCopy\r\n    }\r\n    case 'SET-USER-PROFILE': {\r\n      return {...state, profile: action.profile} as InitialStatePropsType\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const AddPostAC = (): AddPostACType => ({type: \"ADD-POST\"})\r\nexport const UpdateNewPostTextAC = (newText: string): UpdateNewPostTextACType => ({\r\n  type: 'UPDATE-NEW-POST-TEXT',\r\n  newText: newText\r\n})\r\nexport const SetUserProfileAC = (profile: ProfileType): SetUserProfileACType => ({type: 'SET-USER-PROFILE', profile})\r\n\r\nexport const setUserThunk = (userId: string | undefined, dispatch: Dispatch) => {\r\n    profileAPI.getProfile(userId).then(response => {\r\n      dispatch(SetUserProfileAC(response.data))\r\n    })\r\n}","import {MyPosts} from \"../MyPosts\";\r\nimport {AddPostAC, postPropsType, UpdateNewPostTextAC} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStatetype} from \"../../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type MapStatePropsType = {\r\n  posts: Array<postPropsType>\r\n  newPostText: string\r\n}\r\n\r\nexport type MapDispatchPropsType = {\r\n  updateNewPostText: (text: string) => void\r\n  addPost: () => void\r\n}\r\n\r\nexport type MyPostsPropType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStatetype): MapStatePropsType => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n  return {\r\n    updateNewPostText: (text: string) => {dispatch(UpdateNewPostTextAC(text))},\r\n    addPost: () => {dispatch(AddPostAC())}\r\n  }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React, {ChangeEvent} from \"react\";\r\nimport {Post} from \"./Post/Post\";\r\nimport s from './MyPosts.module.css'\r\nimport {MyPostsPropType} from \"./Post/MyPostsContainer\";\r\n\r\nexport const MyPosts = (props: MyPostsPropType) => {\r\n\r\n  const postsElemnt = props.posts.map(p => <Post message={p.message} likescount={p.likescount}/>)\r\n\r\n  const onAddPost = () => {\r\n    props.addPost()\r\n  }\r\n\r\n  const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    props.updateNewPostText(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <textarea placeholder={'Enter your post'} value={props.newPostText} onChange={onChangeHandler}/>\r\n        <div>\r\n          <button onClick={onAddPost}>Add Post</button>\r\n        </div>\r\n      </div>\r\n      <div className={s.pospt}>\r\n        {postsElemnt}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport { ProfileInfo } from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/Post/MyPostsContainer\";\r\nimport {ProfileType} from \"./ProfileContainer\";\r\n\r\ntype ProfilePropsType = {\r\n  profile: ProfileType\r\n}\r\n\r\nexport const Profile = (props: ProfilePropsType) => {\r\n\r\n  return (\r\n    <div className={s.profile}>\r\n      <ProfileInfo profile={props.profile}/>\r\n      <MyPostsContainer/>\r\n    </div>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStatetype} from \"../../redux/redux-store\";\r\nimport {setUserThunk} from \"../../redux/profile-reducer\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\n\r\ntype ContactsType = {\r\n  facebook: string,\r\n  website: null,\r\n  vk: string,\r\n  twitter: string,\r\n  instagram: string,\r\n  youtube: null,\r\n  github: string,\r\n  mainLink: null\r\n}\r\ntype PhotosType = {\r\n  small: string\r\n  large: string\r\n}\r\nexport type ProfileType = {\r\n  aboutMe: string\r\n  contacts: ContactsType\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string\r\n  fullName: string\r\n  userId: number\r\n  photos: PhotosType\r\n} | null\r\n\r\nexport const ProfileContainer = () => {\r\n  const state = useSelector((state: AppStatetype) => state.profilePage)\r\n  const auth = useSelector((state: AppStatetype) => state.auth)\r\n  const dispatch = useDispatch()\r\n  let {userId} = useParams()\r\n  if (!userId) {\r\n    userId = '21580'\r\n  }\r\n  let navigate = useNavigate()\r\n  useEffect(() => {\r\n    if(!auth.isAuth){\r\n      return navigate('/login')\r\n    }\r\n  })\r\n  useEffect(() => {\r\n    setUserThunk(userId, dispatch)\r\n  }, [userId, dispatch])\r\n\r\n  return (\r\n    <div>\r\n      <Profile profile={state.profile}/>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.5b128dcd.png\";","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport logo from '../../images/logo.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {InitialStateType} from \"../../redux/auth-reducer\";\r\n\r\ntype HeaderPropsType = {\r\n  state: InitialStateType\r\n}\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n\r\n  return (\r\n    <header className={s.header}>\r\n      <img src={logo} alt={'logo'}/>\r\n      <div className={s.loginBlock}>\r\n        {props.state.isAuth ? 'Logout' : <NavLink to={'/login'}>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  )\r\n}","import React from \"react\";\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\n\r\ntype ActionType = SetuserDataACType\r\nexport type InitialStateType = {\r\n  id: number | null\r\n  login: string | null\r\n  email: string | null\r\n  isAuth: boolean\r\n}\r\ntype SetuserDataACType = {\r\n  type: 'SET-USER-DATA'\r\n  data: {userId: number, email: string, login: string}\r\n}\r\n\r\nlet initialState = {\r\n  id: null,\r\n  login: null,\r\n  email: null,\r\n  isAuth: false\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'SET-USER-DATA': {\r\n      return {...state, ...action.data, isAuth: true}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const setUserDataAC = (userId: number, email: string, login: string):SetuserDataACType => ({type: 'SET-USER-DATA', data: {userId, email, login}})\r\n\r\nexport const setAuthUserDataThunk = (dispatch: Dispatch) => {\r\n  authAPI.getAuth().then(data => {\r\n    if (data.resultCode === 0) {\r\n      let {id, login, email} = data\r\n      dispatch(setUserDataAC(id, email, login))\r\n    }\r\n  })\r\n}","import React, {useEffect} from 'react';\r\nimport {Header} from \"./Header\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setAuthUserDataThunk} from \"../../redux/auth-reducer\";\r\nimport {AppStatetype} from \"../../redux/redux-store\";\r\n\r\nexport const HeaderContainer = () => {\r\n  let state = useSelector((state: AppStatetype) => state.auth)\r\n  let dispatch = useDispatch()\r\n  useEffect(() => {\r\n    setAuthUserDataThunk(dispatch)\r\n    }\r\n  )\r\n  return (\r\n    <Header state={state}/>\r\n  );\r\n};","import React from 'react';\r\n\r\nconst Login = () => {\r\n  return (\r\n    <h1>Login.</h1>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react';\nimport s from './App.module.css'\nimport {Nav} from \"./components/Nav/Nav\";\nimport {Route, Routes} from \"react-router-dom\";\nimport {News} from \"./components/News/News\";\nimport {Music} from \"./components/Music/Music\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {DialogsContainer} from \"./components/Dialogs/Message/DialogsContainer\";\nimport {UsersContainer} from \"./components/Users/usersContainer\";\nimport {ProfileContainer} from \"./components/Profile/ProfileContainer\";\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\n\nexport const App = () => {\n  return (\n      <div className={s.appWrapper}>\n        <HeaderContainer/>\n        <div className={s.appWrapperBody}>\n          <Nav/>\n          <div className={s.appWrapperContent}>\n            <Routes>\n              <Route path='/login' element={<Login/>}/>\n              <Route path='/' element={<ProfileContainer/>}/>\n              <Route path='/profile/' element={<ProfileContainer/>}/>\n              <Route path='/profile/:userId' element={<ProfileContainer/>}/>\n              <Route path='/dialogs/*' element={<DialogsContainer/>}/>\n              <Route path='/news' element={<News/>}/>\n              <Route path='/music' element={<Music/>}/>\n              <Route path='/settings' element={<Settings/>}/>\n              <Route path='/users' element={<UsersContainer/>}/>\n            </Routes>\n          </div>\n        </div>\n      </div>\n  );\n}\n\n\n\n\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport {usersReducer} from \"./users-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\nexport type AppStatetype = ReturnType<typeof rootReduser>\r\n\r\nlet rootReduser = combineReducers({\r\n  profilePage: profileReducer,\r\n  messagesPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer\r\n})\r\n\r\nexport let store = createStore(rootReduser, applyMiddleware(thunkMiddleware))\r\n\r\n\r\n\r\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport {App} from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"ProfileInfo_photo__yWC2V\",\"body\":\"ProfileInfo_body__1T_AO\",\"info\":\"ProfileInfo_info__21Ax0\",\"title\":\"ProfileInfo_title__2kSSe\"};"],"sourceRoot":""}